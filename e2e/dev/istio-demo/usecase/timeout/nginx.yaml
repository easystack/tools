apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx
  name: nginx
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: nginx
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-v1
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx
      version: v1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
        version: v1
        sidecar.istio.io/inject: "false"
    spec:
      nodeSelector:
        node.es.io/role: worker
      containers:
      - image: hub.easystack.cn/captain/nginx:1.21
        imagePullPolicy: IfNotPresent
        name: nginx
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/nginx
          name: config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: nginx
        name: config
---
apiVersion: v1
data:
  nginx.conf: |
    error_log stderr notice;

    worker_processes 16;
    events {
      multi_accept on;
      use epoll;
      worker_connections 1024;
    }

    stream {
            upstream mockserver_80 {
                least_conn;
                server mockserver:80;

                        }

            server {
                listen        0.0.0.0:80;
                proxy_pass    mockserver_80;
                proxy_timeout 5s;
                proxy_connect_timeout 1s;

            }

    }
kind: ConfigMap
metadata:
  name: nginx
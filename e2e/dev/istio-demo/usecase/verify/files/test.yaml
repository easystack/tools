apiVersion: apps/v1
kind: Deployment
metadata:
  name: mockserver-v1
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: mockserver
      version: v1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mockserver
        version: v1
    spec:
      nodeSelector:
        #node.es.io/esm: enabled
         node-role.kubernetes.io/node: "true"
      containers:
      - image: hub.easystack.io/production/nginx:1.21
        imagePullPolicy: IfNotPresent
        name: mockserver
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mockserver-v2
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: mockserver
      version: v2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mockserver
        version: v2
    spec:
      nodeSelector:
        #node.es.io/esm: enabled
         node-role.kubernetes.io/node: "true"
      containers:
      - image: hub.easystack.io/production/nginx:1.21
        imagePullPolicy: IfNotPresent
        name: mockserver
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---        
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testclient
spec:
  replicas: 1
  selector:
    matchLabels:
      app: testclient
  template:
    metadata:
      labels:
        app: testclient
    spec:
      nodeSelector:
        #node.es.io/esm: enabled
         node-role.kubernetes.io/node: "true"
      containers:
      - image: hub.easystack.io/production/nginx:1.21
        imagePullPolicy: IfNotPresent
        name: mockserver
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mockserver
  name: mockserver
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: mockserver
  type: ClusterIP
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: mockserver
spec:
  host: mockserver
  subsets:
  - labels:
      app: mockserver
      version: v1
    name: v1
  - labels:
      app: mockserver
      version: v2
    name: v2
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: mockserver
spec:
  gateways:
  - mesh
  hosts:
  - mockserver
  http:
  - route:
    - destination:
        host: mockserver
        port:
          number: 80
        subset: v1
    fault:
      delay:
        fixedDelay: 2s      # 必选，要求>=1ms
        percentage:         # 指定需要延迟的百分比，默认0.0，可选
          value: 100.0
    mirror:
      host: mockserver        # 必选
      subset: v2         # 可选
      port:              # 可选
        number: 80
    mirrorPercentage:    # 可选，默认100.0
      value: 100.0
